import fs from 'node:fs/promises';

fs.readdir('src/transformers/')
.then(files => files
	// exclude all files starting with `.` or `_` or not being `.schema.json`
	.filter(f => /^[^._].*\.schema\.json$/.test(f))
	.map(f => f.replace(/\.schema\.json$/i,''))
)
.then(schemata => fs.writeFile('src/transformers/_export.js',


// HEAD OF FILE

`/**
 * @file This file is autogenerated as part of the "prebuild" procedure.
 *	Modifications will be overwritten on rebuild.
 * @description Necessary because the JavaScript bundler doesn't support dynamic
 *	imports. Otherwise the dynamic code could be:
 *	\`\`\`js
 *	import fs from 'node:fs/promises';
 *	fs.readdir('./').then(files => files
 *	 .filter(f => /^[^._].*\.schema\.json$/.test(f))
 *	 .map(f => f.replace(/\.schema\.json$/i,''))
 *	 .map(f => ({
 *		schema: './'+f+'.schema.json',
 *		transformer: './'+f+'.transformer.js'
 *	  }) )
 *	);
 *	\`\`\`
 */

import fs from 'node:fs/promises';

` + schemata.map( (f,i) => 'import schema'+i+' from "./'+f
	+'.schema.json" assert { type:"json" };\n' ).join('')
  + schemata.map( (f,i) => 'import { default as transformer'+i
  	+' } from "./'+f+'.transformer.js";\n' ).join('') +
`
/** @type {schema: URL|object, name:string, transformer: URL|string}[] */ 
export default [ // transformers
` + schemata.map( (f,i)=>'	{schema: schema'+i
	+', name: '+JSON.stringify(f)
	+', transformer: transformer'+i+'}' ).join(',\n')
+ '\n];'

// END OF FILE


));
